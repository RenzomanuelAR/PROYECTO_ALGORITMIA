package cibertec;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JMenuBar;
import javax.swing.UIManager;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;

public class Proyecto extends JFrame implements ActionListener {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JMenuBar menuBar;
	private JMenu mnuMantenimiento;
	private JMenuItem mnuConsultarProyector;
	private JMenuItem mnuCondigurarPrecios;
	private JMenuItem mnuListarProyectores;
	private JMenu mnuVentas;
	private JMenu mnuConfiguracion;
	private JMenuItem mnuConfigurarDescuentos;
	private JMenuItem mnuConfigurarTipoDeCambio;
	private JMenuItem mnuConfigurarCantidadOptimaVentas;
	private JMenu mnuArchivo;
	private JMenuItem mnuSalir;
	private JMenuItem mnuVenderProyectores;
	private JMenuItem mnuGenerarReportes;
	
	// Datos mínimos del primer proyector
	public static String modelo0      = "Acer H7530D";
	public static String resolucion0  = "HD 1080(1920x1080)";
	public static int brillo0         = 2000;
	public static double precio0      = 1067; // en dólares

	// Datos mínimos del segundo proyector
	public static String modelo1      = "Epson PowerLite S9";
	public static String resolucion1  = "SVGA(800x600)";
	public static int brillo1    	   = 2500;
	public static double precio1      = 499; // en dólares

	// Datos mínimos del tercer proyector
	public static String modelo2      = "Epson PowerLite 1220";
	public static String resolucion2  = "XGA(1024x768)";
	public static int brillo2         = 2600;
	public static double precio2      = 649; // en dólares

	// Datos mínimos del cuarto proyector
	public static String modelo3      = "Acer H5360";
	public static String resolucion3  = "HD 720(1280x720)";
	public static int brillo3         = 2500;
	public static double precio3      = 599; // en dólares

	// Datos mínimos del quinto proyector
	public static String modelo4      = "Canon LV-5220";
	public static String resolucion4  = "SVGA (800x600)";
	public static int brillo4         = 2000;
	public static double precio4      = 695; // en dólares

	// Valores por defecto de los porcentajes de descuento
	public static double porcDes1 = 3.0;
	public static double porcDes2 = 4.5;
	public static double porcDes3 = 6.5;
	public static double porcDes4 = 9.0;

	// Valor por defecto del tipo de cambio
	public static double tipoCambio = 2.82;

	// Valor por defecto de la cantidad óptima de ventas (COV)
	public static int COV = 150;
	private JDesktopPane desktopPane;
	private JInternalFrame internalFrame;
	

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Proyecto frame = new Proyecto();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Proyecto() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 762, 465);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		menuBar = new JMenuBar();
		menuBar.setBounds(0, 0, 746, 21);
		contentPane.add(menuBar);
		
		mnuArchivo = new JMenu("Archivo");
		menuBar.add(mnuArchivo);
		
		mnuSalir = new JMenuItem("Salir");
		mnuSalir.addActionListener(this);
		mnuArchivo.add(mnuSalir);
		
		mnuMantenimiento = new JMenu("Mantenimiento");
		menuBar.add(mnuMantenimiento);
		
		mnuConsultarProyector = new JMenuItem("Consultar proyector");
		mnuConsultarProyector.addActionListener(this);
		mnuMantenimiento.add(mnuConsultarProyector);
		
		mnuCondigurarPrecios = new JMenuItem("Configurar precios");
		mnuCondigurarPrecios.addActionListener(this);
		mnuMantenimiento.add(mnuCondigurarPrecios);
		
		mnuListarProyectores = new JMenuItem("Listar proyectores");
		mnuListarProyectores.addActionListener(this);
		mnuMantenimiento.add(mnuListarProyectores);
		
		mnuVentas = new JMenu("Ventas");
		mnuVentas.addActionListener(this);
		menuBar.add(mnuVentas);
		
		mnuVenderProyectores = new JMenuItem("Vender proyectores");
		mnuVenderProyectores.addActionListener(this);
		mnuVentas.add(mnuVenderProyectores);
		
		mnuGenerarReportes = new JMenuItem("Generar reportes");
		mnuGenerarReportes.addActionListener(this);
		mnuVentas.add(mnuGenerarReportes);
		
		mnuConfiguracion = new JMenu("Configuraci\u00F3n");
		menuBar.add(mnuConfiguracion);
		
		mnuConfigurarDescuentos = new JMenuItem("Configurar descuentos");
		mnuConfigurarDescuentos.addActionListener(this);
		mnuConfiguracion.add(mnuConfigurarDescuentos);
		
		mnuConfigurarTipoDeCambio = new JMenuItem("Configurar tipo de cambio");
		mnuConfigurarTipoDeCambio.addActionListener(this);
		mnuConfiguracion.add(mnuConfigurarTipoDeCambio);
		
		mnuConfigurarCantidadOptimaVentas = new JMenuItem("Configurar cantidad \u00F3ptima de ventas");
		mnuConfigurarCantidadOptimaVentas.addActionListener(this);
		mnuConfiguracion.add(mnuConfigurarCantidadOptimaVentas);
		
		desktopPane = new JDesktopPane();
		desktopPane.setBounds(0, 20, 746, 407);
		contentPane.add(desktopPane);
		
		internalFrame = new JInternalFrame("New JInternalFrame");
		internalFrame.setBounds(138, 24, 515, 258);
		desktopPane.add(internalFrame);
		internalFrame.setVisible(true);
	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == mnuGenerarReportes) {
			actionPerformedMnuMostrarReportes(e);
		}
		if (e.getSource() == mnuSalir) {
			actionPerformedMnuSalir(e);
		}
		if (e.getSource() == mnuConsultarProyector) {
			actionPerformedMnuConsultarProyector(e);
		}
		if (e.getSource() == mnuCondigurarPrecios) {
			actionPerformedMnuModificarProyector(e);
		}
		if (e.getSource() == mnuListarProyectores) {
			actionPerformedMnuListarProyectores(e);
		}
		if (e.getSource() == mnuVenderProyectores) {
			actionPerformedMnuVender(e);
		}
		if (e.getSource() == mnuConfigurarDescuentos) {
			actionPerformedMnuConfigurarDescuentos(e);
		}
		if (e.getSource() == mnuConfigurarTipoDeCambio) {
			actionPerformedMnuConfigurarTipoDeCambio(e);
		}
		if (e.getSource() == mnuConfigurarCantidadOptimaVentas) {
			actionPerformedMnuConfigurarUIT(e);
		}
	}
	protected void actionPerformedMnuSalir(ActionEvent e) {
		System.exit(0);
	}
	protected void actionPerformedMnuConsultarProyector(ActionEvent e) {
	}
	protected void actionPerformedMnuVender(ActionEvent e) {
	}
	protected void actionPerformedMnuModificarProyector(ActionEvent e) {
	}
	protected void actionPerformedMnuListarProyectores(ActionEvent e) {
	}
	protected void actionPerformedMnuConfigurarDescuentos(ActionEvent e) {
	}
	protected void actionPerformedMnuConfigurarTipoDeCambio(ActionEvent e) {
	}
	protected void actionPerformedMnuConfigurarUIT(ActionEvent e) {
	}
	protected void actionPerformedMnuMostrarReportes(ActionEvent e) {
	}
}
