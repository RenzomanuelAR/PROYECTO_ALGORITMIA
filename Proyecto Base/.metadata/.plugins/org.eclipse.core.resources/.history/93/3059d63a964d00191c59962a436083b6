package cibertec;

import java.awt.BorderLayout;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class DialogoReportes extends JDialog implements ActionListener {

	private static final long serialVersionUID = 1L;
	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipoDeReporte;
	private JComboBox<String> cboTipoReporte;
	private JScrollPane scrollPane;
	private JTextArea txtS;
	private JButton btnCerrar;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (Throwable e) {
			e.printStackTrace();
		}
		try {
			DialogoReportes dialog = new DialogoReportes();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public DialogoReportes() {
		setModal(true);
		setTitle("Generar reportes");
		setBounds(100, 100, 540, 304);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);

		lblTipoDeReporte = new JLabel("Tipo de reporte");
		lblTipoDeReporte.setBounds(10, 15, 74, 14);
		contentPanel.add(lblTipoDeReporte);

		cboTipoReporte = new JComboBox<String>();
		cboTipoReporte.setModel(new DefaultComboBoxModel<String>(new String[] { "Ventas por marca", "Marcas con venta \u00F3ptima",
				"Precios en relaci\u00F3n al promedio", "Precio promedio, mayor y menor", "Importe pagado acumulado promedio, mayor y menor" }));
		cboTipoReporte.setBounds(94, 12, 297, 20);
		contentPanel.add(cboTipoReporte);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 40, 504, 215);
		contentPanel.add(scrollPane);

		txtS = new JTextArea();
		scrollPane.setViewportView(txtS);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(425, 11, 89, 23);
		contentPanel.add(btnCerrar);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	
	public void PromediosMaxMin() {

		double prepro, premax, premin, conpro, conmax, conmin;
		
		prepro = obtenerPromedio(Tienda.precio0, Tienda.precio1, Tienda.precio2, Tienda.precio3, Tienda.precio4);
		premax = obtenerMaximo(Tienda.precio0, Tienda.precio1, Tienda.precio2, Tienda.precio3, Tienda.precio4);
		premin = obtenerMinimo(Tienda.precio0, Tienda.precio1, Tienda.precio2, Tienda.precio3, Tienda.precio4);

		conpro = obtenerPromedio(Tienda.garantia0, Tienda.garantia, Tienda.garantia2, Tienda.garantia3, Tienda.contenido4);
		conmax = obtenerMaximo(Tienda.garantia0, Tienda.garantia, Tienda.garantia2, Tienda.garantia3, Tienda.contenido4);
		conmin = obtenerMinimo(Tienda.garantia0, Tienda.garantia, Tienda.garantia2, Tienda.garantia3, Tienda.contenido4);
		
		txtS.setText("PROMEDIO, MAXIMOS Y MINIMOS\n\n");
		imprimir("Precio Promedio: " + prepro);
		imprimir("Precio Mínimo  : " + premax);
		imprimir("Precio Máximo  : " + premin);

		imprimir("\n");

		imprimir("Contenido Promedio : " + conpro + "ml");
		imprimir("Contenido Mínimo   : " + conmin + "ml");
		imprimir("Contenido Máximo   : " + conmax + "ml");
	}

	double obtenerPromedio(double a, double b, double c, double d, double e) {
		return (a + b +c +d +e)/5;
	}

	double obtenerMinimo(double a, double b, double c, double d, double e) {
		double min = a;
		if (b < min)
			min = b;
		if (c < min)
			min = b;
		if (d < min)
			min = b;
		if (e < min)
			min = b;
		return min;
	}

	double obtenerMaximo(double a, double b, double c, double d, double e) {
		double max = a;
		if (b > max)
			max = b;
		if (c > max)
			max = b;
		if (d > max)
			max = b;
		if (e > max)
			max = b;
		return max;
	}
}
